// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  name         String    @db.VarChar(150)
  email        String    @unique @db.VarChar(255)
  cpf          String    @unique @db.VarChar(20)
  phone        String    @db.VarChar(20)
  birthdate    String    @db.VarChar(20)
  description  String?   @db.Text
  password     String    @db.VarChar(50)
  account_type String    @db.VarChar(50)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  addresses    Address[]
  announcements Announcement[]
  comments     Comments[]
}

model Address {
  id           String  @id @default(uuid())
  street       String  @db.VarChar(255)
  number       String  @db.VarChar(10)
  complement   String? @db.VarChar(255)
  city         String  @db.VarChar(255)
  state        String  @db.VarChar(255)
  zipCode      String  @db.VarChar(10)
  userId       String
  user         User    @relation(fields: [userId],references: [id])
}

model Announcement {
  id           String    @id @default(uuid())
  brand        String    @db.VarChar(255)
  model        String    @db.VarChar(255)
  year         Int    
  mileage      Int   
  price        Decimal   @db.Decimal()
  fuelType     String    @db.VarChar(255)
  color        String    @db.VarChar(255)
  description  String    @db.Text
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  userId       String
  user         User      @relation(fields: [userId],references: [id])
  images       Image[]
  comments     Comments[]
}

model Image {
  id               String         @id @default(uuid())
  announcementId   String
  announcement     Announcement   @relation(fields: [announcementId],references: [id])
}

model Comments {
  id               String          @id @default(uuid())
  comment          String          @db.Text
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  announcementId   String
  announcement     Announcement    @relation(fields: [announcementId],references: [id]) 
  userId           String
  user             User            @relation(fields: [userId],references: [id])
}